@model BookBazaar.Models.VM.DetailedOrderBasketViewModel;

@{
    ViewData["Title"] = "My order basket - Book Bazaar";
    var orderBasketList = @Model.OrderBasketList.ToList();
    var discounts = @Model.BookDiscounts;

    double savings = (double)ViewData["Savings"]!;
    bool discountsApplied = (bool)ViewData["DiscountsApplied"]!;
    double totalWithoutDiscount = (double)ViewData["TotalWithoutDiscount"]!;
    int productsAmount = (int)ViewData["ProductsAmount"]!;

}

@if (orderBasketList.Count > 0)
{
    <div class="container">
        <h1 class="mt-3">My order basket</h1>
        <form method="post"
              class="mt-4 d-flex justify-content-around align-items-strech flex-column flex-sm-column flex-md-row flex-lg-row flex-row">
            <div class="BasketItemsWrapper mb-2">
                @foreach (var cartItem in orderBasketList)
                {
                    <div class="BasketCard w-100 d-flex align-items-center justify-content-center justify-content-sm-center justify-content-md-center justify-content-lg-between justify-content-xl-between gap-2 flex-row mt-3 flex-nowrap">
                        <div class="ContainerWidth d-flex flex-row flex-nowrap align-items-start justify-content-center justify-content-sm-center justify-content-md-center justify-content-lg-start">
                            <img src="@cartItem.Book.CoverImageUrl" alt="Book cover" class="BasketBookCoverImage"/>
                            <div class="d-flex flex-column">
                                <span
                                    onclick="location.href=`@Url.Action("Details", "Home", new { Id = cartItem.BookId })`"
                                    class="OrderBasketLink mx-3">
                                    @(cartItem.Book.Title) by
                                    @(cartItem.Book.Author.Contains(',') ? cartItem.Book.Author.Split(",")[0] + " et al." : cartItem.Book.Author)
                                </span>
                                <span class="mx-3 d-flex align-items-center">
                                    <span class="StockCircle fw-bolder"
                                          style="background-color:@(cartItem.InventoryItem.QuantityInStock > 0 ? "#468B91" : "red")">
                                    </span>
                                    <span style="color:@(cartItem.InventoryItem.QuantityInStock > 0 ? "#468B91" : "red")">
                                        &nbsp;@(cartItem.InventoryItem.QuantityInStock > 0 ? "In stock" : "Sold out")
                                    </span>
                                </span>
                            </div>
                        </div>
                        <div class="d-flex align-items-center justify-content-center flex-column flex-sm-row flex-md-row flex-lg-column flex-xl-column gap-0 gap-sm-0 gap-md-0 gap-lg-1 gap-xl-1">
                            <span class="fw-bolder @(discounts[cartItem.BookId] > 0.00 ? "text-decoration-line-through" : "")">
                                @((cartItem.Book.Price * cartItem.Items).ToString("0.00")) &euro;
                            </span>
                            @if (Model.BookDiscounts[cartItem.BookId] > 0.00)
                            {
                                <span class="fw-bolder Discount text-center">-@(discounts[cartItem.BookId] * 100)% off</span>
                                <span class="fw-bolder Discount text-center">
                                    @(((cartItem.Book.Price * cartItem.Items) - (discounts[cartItem.BookId] * cartItem.Book.Price * cartItem.Items)).ToString("0.00")) &euro;
                                </span>
                            }
                            <div class="d-flex align-items-center justify-content-center flex-column">
                                <div class="d-flex align-items-center justify-content-center">
                                    <div
                                        onclick="location.href = `@Url.Action("DecreaseQuantity", "OrderBasket", new { orderBasketId = cartItem.Id })`"
                                        class="OrderItemInteractionButton d-flex align-items-center justify-content-center @(cartItem.Items > 1 ? "d-flex" : "d-none")">
                                        <span>-</span>
                                    </div>
                                    <span>@cartItem.Items</span>
                                    <div
                                        onclick="location.href=`@Url.Action("IncreaseQuantity", "OrderBasket", new { orderBasketId = cartItem.Id })`"
                                        class="OrderItemInteractionButton d-flex align-items-center justify-content-center @(cartItem.Items + 1 > cartItem.InventoryItem.QuantityInStock ? "d-none" : "d-flex")">
                                        <span>+</span>
                                    </div>
                                    <div>
                                        <div
                                            onclick="location.href=`@Url.Action("RemoveOrderBasketItem", "OrderBasket", new { orderBasketId = cartItem.Id })`"
                                            class="OrderItemDeleteButton d-flex align-items-center justify-content-center">
                                            <i class="bi bi-trash3-fill"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="BasketOrderSummary">
                <h3>Order summary</h3>
                <div fw-bolder>
                    <div>Books marked for delivery: @productsAmount</div>
                    <span>Total price:</span>
                    <span class="@(discountsApplied ? "text-decoration-line-through" : "fs-4")">
                        @(totalWithoutDiscount.ToString("0.00")) &euro;
                    </span>
                    <div class="Discount fw-bolder fs-4 @(discountsApplied ? "d-block" : "d-none")">@(Model.Order.GrandTotal.ToString("0.00")) &euro;</div>
                    <div class="mb-2 @(discountsApplied ? "d-block" : "d-none mb-2")">You saved: @(savings.ToString("0.00")) &euro;</div>
                </div>
                <button
                    type="submit"
                    asp-action="ShippingDetails"
                    class="button primary Button AddButton CenteredButton w-50 mt-2">
                    Continue
                </button>
            </div>
        </form>
    </div>
}
else
{
    <div class="d-flex align-items-center justify-content-center flex-column mb-3">
        <img src="~/img/undraw_empty_cart_co35.svg" width="500" height="700" alt="Empty shopping cart illustration">
        <h2>Your order basket is empty.</h2>
        <button
            onclick="location.href=`@Url.Action("Index", "Home")`"
            class="button primary Button AddButton CenteredButton w-25">
            Find books
        </button>
    </div>
}