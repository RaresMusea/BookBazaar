@using BookBazaar.Misc
@model OrderViewModel

@{
    ViewData["Title"] = "My orders";
    var order = @Model.Order;
    var orderInfos = @Model.OrderInfos;
    bool HasPermission() => User.IsInRole(RoleManager.Administrator) || User.IsInRole(RoleManager.Internal);
}

<div class="fs-4 text-center">Order #@order.Id from @order.OrderDate.ToShortDateString()</div>
<div class="Flexbox flex-column">

@if (order.OrderState == OrderStatus.Pending || order.OrderState == OrderStatus.Approved)
{
    <form method="post"class="border Shadow1 rounded-2 p-3 mt-4 mx-6 mb-4">
        <p class="text-center fw-bolder">Shipping details</p>
        <input hidden asp-for="Order.Id">
        <input hidden asp-for="Order.UserId">
        <div asp-validation-summary="ModelOnly" class="ValidationSummary"></div>
        <div class="mb-3 d-flex flex-row justify-content-around align-items-center">
            <div class="col-11">
                <label asp-for="Order.Name" class="ml-1 mt-2"></label>
                <span asp-validation-for="Order.Name" class="ValidationError"></span>
                @if (HasPermission())
                {
                    <input asp-for="Order.Name" class="form-control TextInput mt-1">
                }
                else
                {
                    <input asp-for="Order.Name" readonly class="form-control TextInput mt-1">
                }
            </div>
        </div>

        <div class="mb-3 d-flex flex-row justify-content-around align-items-center">
            <div class="col-11">
                <label asp-for="Order.User.Email" class="ml-1 mt-2"></label>
                <span asp-validation-for="Order.User.Email" class="ValidationError"></span>
                @if (HasPermission())
                {
                    <input asp-for="Order.User.Email" class="form-control TextInput mt-1">
                }
                else
                {
                    <input asp-for="Order.User.Email" class="form-control TextInput mt-1" readonly>
                }
            </div>
        </div>

        <div class="mb-3 d-flex flex-row justify-content-around align-items-center">
            <div class="col-11">
                <label asp-for="Order.PhoneNumber" class="ml-1 mt-2"></label>
                <span asp-validation-for="Order.PhoneNumber" class="ValidationError"></span>
                @if (HasPermission())
                {
                    <input asp-for="Order.PhoneNumber" class="form-control TextInput mt-1">
                }
                else
                {
                    <input asp-for="Order.PhoneNumber" class="form-control TextInput mt-1" readonly>
                }
            </div>
        </div>

        <div class="mb-3 d-flex flex-row justify-content-around align-items-center">
            <div class="col-11">
                <label asp-for="Order.Address" class="ml-1 mt-2"></label>
                <span asp-validation-for="Order.Address" class="ValidationError"></span>
                @if (HasPermission())
                {
                    <input asp-for="Order.Address" class="form-control TextInput mt-1">
                }
                else
                {
                    <input asp-for="Order.Address" class="form-control TextInput mt-1" readonly>
                }
            </div>
        </div>

        <div class="mb-3 d-flex flex-row justify-content-around align-items-center">
            <div class="col-5">
                <label asp-for="Order.City" class="ml-1 mt-2"></label>
                <span asp-validation-for="Order.City" class="ValidationError"></span>
                @if (HasPermission())
                {
                    <input asp-for="Order.City" class="form-control TextInput mt-1">
                }
                else
                {
                    <input asp-for="Order.City" class="form-control TextInput mt-1" readonly>
                }
            </div>

            <div class="col-5">
                <label asp-for="Order.Country" class="ml-1 mt-2"></label>
                <span asp-validation-for="Order.Country" class="ValidationError"></span>
                @if (HasPermission())
                {
                    <input asp-for="Order.Country" class="form-control TextInput mt-1">
                }
                else
                {
                    <input asp-for="Order.Country" class="form-control TextInput mt-1" readonly>
                }
            </div>
        </div>

        <div class="mb-3 d-flex flex-row justify-content-around align-items-center">
            <div class="col-5">
                <label asp-for="Order.OrderDate" class="ml-1 mt-2"></label>
                @if (HasPermission())
                {
                    <input asp-for="Order.OrderDate.Date" class="form-control TextInput mt-1">
                }
                else
                {
                    <input asp-for="Order.OrderDate.Date" class="form-control TextInput mt-1" readonly>
                }
            </div>

            <div class="col-5">
                <label asp-for="Order.DeliveryDate" class="ml-1 mt-2"></label>

                <input value="@order.DeliveryDate.ToShortDateString()" class="form-control TextInput mt-1" readonly type="text">

            </div>
        </div>

        <div class="mb-3 d-flex flex-row justify-content-around align-items-center">
            <div class="col-5">
                <label asp-for="Order.OrderState" class="ml-1 mt-2"></label>
                @if (HasPermission())
                {
                    <input asp-for="Order.OrderState" class="form-control TextInput mt-1">
                }
                else
                {
                    <input asp-for="Order.OrderState" class="form-control TextInput mt-1" readonly>
                }
            </div>

            <div class="col-5">
                <label asp-for="Order.TransactionState" class="ml-1 mt-2"></label>
                @if (HasPermission())
                {
                    <input asp-for="Order.TransactionState" class="form-control TextInput mt-1">
                }
                else
                {
                    <input asp-for="Order.TransactionState" class="form-control TextInput mt-1" readonly>
                }
            </div>
        </div>

        <div class="mb-3 d-flex flex-row justify-content-around align-items-center">
            @if (order.SessionId is not null)
            {
                <div class="col-11">
                    <label asp-for="Order.PaymentDate" class="ml-1 mt-2"></label>

                    <input asp-for="Order.PaymentDate.Date" class="form-control TextInput mt-1">
                </div>
            }
            else
            {
                <div class="col-11">
                    <label asp-for="Order.PaymentDueDate" class="ml-1 mt-2"></label>
                    <input asp-for="Order.PaymentDueDate.Date" class="form-control TextInput mt-1">
                </div>
            }
        </div >
        <div class="mb-3 d-flex flex-row justify-content-around align-items-center">
            <div class="col-5">
                <label asp-for="Order.ShippingProvider" class="ml-1 mt-2"></label>
                @if (HasPermission())
                {
                    <input asp-for="Order.ShippingProvider" class="form-control TextInput mt-1">
                }
                else
                {
                    <input asp-for="Order.ShippingProvider" class="form-control TextInput mt-1" readonly>
                }
            </div>

            <div class="col-5">
                <label asp-for="Order.Awb" class="ml-1 mt-2"></label>
                @if (HasPermission())
                {
                    <input asp-for="Order.Awb" class="form-control TextInput mt-1">
                }
                else
                {
                    <input asp-for="Order.Awb" class="form-control TextInput mt-1" readonly>
                }
            </div>
        </div>
        @if (HasPermission())
        {
            <div class="mb-3 d-flex flex-row justify-content-around align-items-center">
                <div class="col-11">
                    <label asp-for="Order.TransactionId" class="ml-1 mt-2"></label >
                    <input asp-for="Order.TransactionId" class="form-control TextInput mt-1" readonly>
                </div >
            </div>
        }
        @if (HasPermission())
        {
            <button type="submit"
                    class="button-primary mt-3 SubmitNewCategory ForcedMargin Shadow2 rounded-3">
                Update
            </button>
        }
        <a asp-controller="OrderManagement" asp-action="Index" class="mt-4 nav-link link-underline text-center Anchor"> Back to orders</a>
    </form>
}
else
{
    <div class="border Shadow1 rounded-2 p-3 mt-4 mx-6 mb-4">
        <span class="text-center fs-5">Order information</span>
        <div class="d-flex flex-row gap-1">
            <span>Order status: @order.OrderState</span>
            <span>Recipient: @order.Name</span>
            <span>Address: @order.Address, @order.City, @order.Country</span>
            <span>Recipient's email: @order.User.Email</span>
            <span>Recipient's phone number: @order.PhoneNumber</span>
            <span>Delivered by: @order.ShippingProvider</span>
            <span>Tracking number (AWB): @order.Awb</span>
            <span>Delivered by: @order.DeliveryDate</span>
        </div>
    </div>
}

<div class="col-12 col-lg-9 mt-4">
    <h4 class="d-flex justify-content-between align-items-center mb-3">
        <span class="OrderInfo"> Order details </span >
    </h4>
    <ul class="list-group mb-3">
        @foreach (var orderItemInfo in @orderInfos)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <div class="w-75">
                    <h6 class="my-0"> @orderItemInfo.Book.Title </h6 >
                    <span class="d-block">
                        <small class="text-muted"> Amount:@orderItemInfo.Amount </small >
                    </span >
                    <span class="d-block">
                        <small class="text-muted"> Discount: @(orderItemInfo.Discount == 0.00 ? "No" : (orderItemInfo.Discount * 100) + "%") </small >
                    </span >
                    <span class="d-flex align-items-center justify-content-start gap-2">
                        <small class="text-muted"> Price / Unit:</small >
                        <span>
                            @orderItemInfo.Price.ToString("0.00") &euro;
                        </span >
                    </span >
                </div >
                <div class="d-flex flex-column align-items-center">
                    <span class="text-muted">
                        @orderItemInfo.Amount X @orderItemInfo.Book.Price &euro;
                    </span >
                    <span class="@(orderItemInfo.Discount != 0.00 ? "text-decoration-line-through" : "")">
                        @Math.Round((orderItemInfo.Amount * orderItemInfo.Price), 2) &euro;
                    </span>
                    <div class="@(orderItemInfo.Discount != 0.00 ? "d-block Discount" : "d-none")">
                        @(orderItemInfo.Discount != 0.00 ? ((orderItemInfo.Price * orderItemInfo.Amount) - (orderItemInfo.Discount * orderItemInfo.Price * orderItemInfo.Amount)).ToString("0.00") : "") &euro;
                    </div>
                </div>
            </li>
        }
        <li class="list-group-item d-flex justify-content-between TotalBar">
            <div class="fw-bolder"> TOTAL</div >
            <strong> @Model.Order.GrandTotal &euro;</strong>
        </li>
    </ul>
</div>
</div>